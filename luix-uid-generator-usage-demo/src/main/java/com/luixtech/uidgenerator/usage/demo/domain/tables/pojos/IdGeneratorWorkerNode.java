/*
 * This file is generated by jOOQ.
 */
package com.luixtech.uidgenerator.usage.demo.domain.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;


/**
 * Worker assigner for ID generator
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IdGeneratorWorkerNode implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long          id;
    private String        appId;
    private String        hostName;
    private String        type;
    private LocalDate     uptime;
    private LocalDateTime createdTime;

    public IdGeneratorWorkerNode() {}

    public IdGeneratorWorkerNode(IdGeneratorWorkerNode value) {
        this.id = value.id;
        this.appId = value.appId;
        this.hostName = value.hostName;
        this.type = value.type;
        this.uptime = value.uptime;
        this.createdTime = value.createdTime;
    }

    public IdGeneratorWorkerNode(
        Long          id,
        String        appId,
        String        hostName,
        String        type,
        LocalDate     uptime,
        LocalDateTime createdTime
    ) {
        this.id = id;
        this.appId = appId;
        this.hostName = hostName;
        this.type = type;
        this.uptime = uptime;
        this.createdTime = createdTime;
    }

    /**
     * Getter for <code>luixdemo.id_generator_worker_node.id</code>. auto increment id
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>luixdemo.id_generator_worker_node.id</code>. auto increment id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>luixdemo.id_generator_worker_node.app_id</code>. application ID
     */
    public String getAppId() {
        return this.appId;
    }

    /**
     * Setter for <code>luixdemo.id_generator_worker_node.app_id</code>. application ID
     */
    public void setAppId(String appId) {
        this.appId = appId;
    }

    /**
     * Getter for <code>luixdemo.id_generator_worker_node.host_name</code>. host name
     */
    public String getHostName() {
        return this.hostName;
    }

    /**
     * Setter for <code>luixdemo.id_generator_worker_node.host_name</code>. host name
     */
    public void setHostName(String hostName) {
        this.hostName = hostName;
    }

    /**
     * Getter for <code>luixdemo.id_generator_worker_node.type</code>. node type: P - Physical Machine, C - Container
     */
    public String getType() {
        return this.type;
    }

    /**
     * Setter for <code>luixdemo.id_generator_worker_node.type</code>. node type: P - Physical Machine, C - Container
     */
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for <code>luixdemo.id_generator_worker_node.uptime</code>. uptime
     */
    public LocalDate getUptime() {
        return this.uptime;
    }

    /**
     * Setter for <code>luixdemo.id_generator_worker_node.uptime</code>. uptime
     */
    public void setUptime(LocalDate uptime) {
        this.uptime = uptime;
    }

    /**
     * Getter for <code>luixdemo.id_generator_worker_node.created_time</code>. created time
     */
    public LocalDateTime getCreatedTime() {
        return this.createdTime;
    }

    /**
     * Setter for <code>luixdemo.id_generator_worker_node.created_time</code>. created time
     */
    public void setCreatedTime(LocalDateTime createdTime) {
        this.createdTime = createdTime;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final IdGeneratorWorkerNode other = (IdGeneratorWorkerNode) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (appId == null) {
            if (other.appId != null)
                return false;
        }
        else if (!appId.equals(other.appId))
            return false;
        if (hostName == null) {
            if (other.hostName != null)
                return false;
        }
        else if (!hostName.equals(other.hostName))
            return false;
        if (type == null) {
            if (other.type != null)
                return false;
        }
        else if (!type.equals(other.type))
            return false;
        if (uptime == null) {
            if (other.uptime != null)
                return false;
        }
        else if (!uptime.equals(other.uptime))
            return false;
        if (createdTime == null) {
            if (other.createdTime != null)
                return false;
        }
        else if (!createdTime.equals(other.createdTime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.appId == null) ? 0 : this.appId.hashCode());
        result = prime * result + ((this.hostName == null) ? 0 : this.hostName.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.uptime == null) ? 0 : this.uptime.hashCode());
        result = prime * result + ((this.createdTime == null) ? 0 : this.createdTime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("IdGeneratorWorkerNode (");

        sb.append(id);
        sb.append(", ").append(appId);
        sb.append(", ").append(hostName);
        sb.append(", ").append(type);
        sb.append(", ").append(uptime);
        sb.append(", ").append(createdTime);

        sb.append(")");
        return sb.toString();
    }
}
