/*
 * This file is generated by jOOQ.
 */
package com.luixtech.uidgenerator.usage.demo.domain.tables.records;


import com.luixtech.uidgenerator.usage.demo.domain.tables.IdGeneratorWorkerNode;

import java.time.LocalDate;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Worker assigner for ID generator
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IdGeneratorWorkerNodeRecord extends UpdatableRecordImpl<IdGeneratorWorkerNodeRecord> implements Record6<Long, String, String, String, LocalDate, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>luixdemo.id_generator_worker_node.id</code>. auto increment id
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>luixdemo.id_generator_worker_node.id</code>. auto increment id
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>luixdemo.id_generator_worker_node.app_id</code>. application ID
     */
    public void setAppId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>luixdemo.id_generator_worker_node.app_id</code>. application ID
     */
    public String getAppId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>luixdemo.id_generator_worker_node.host_name</code>. host name
     */
    public void setHostName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>luixdemo.id_generator_worker_node.host_name</code>. host name
     */
    public String getHostName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>luixdemo.id_generator_worker_node.type</code>. node type: P - Physical Machine, C - Container
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>luixdemo.id_generator_worker_node.type</code>. node type: P - Physical Machine, C - Container
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>luixdemo.id_generator_worker_node.uptime</code>. uptime
     */
    public void setUptime(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>luixdemo.id_generator_worker_node.uptime</code>. uptime
     */
    public LocalDate getUptime() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>luixdemo.id_generator_worker_node.created_time</code>. created time
     */
    public void setCreatedTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>luixdemo.id_generator_worker_node.created_time</code>. created time
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, String, LocalDate, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, String, String, LocalDate, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return IdGeneratorWorkerNode.ID_GENERATOR_WORKER_NODE.ID;
    }

    @Override
    public Field<String> field2() {
        return IdGeneratorWorkerNode.ID_GENERATOR_WORKER_NODE.APP_ID;
    }

    @Override
    public Field<String> field3() {
        return IdGeneratorWorkerNode.ID_GENERATOR_WORKER_NODE.HOST_NAME;
    }

    @Override
    public Field<String> field4() {
        return IdGeneratorWorkerNode.ID_GENERATOR_WORKER_NODE.TYPE;
    }

    @Override
    public Field<LocalDate> field5() {
        return IdGeneratorWorkerNode.ID_GENERATOR_WORKER_NODE.UPTIME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return IdGeneratorWorkerNode.ID_GENERATOR_WORKER_NODE.CREATED_TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAppId();
    }

    @Override
    public String component3() {
        return getHostName();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public LocalDate component5() {
        return getUptime();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAppId();
    }

    @Override
    public String value3() {
        return getHostName();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public LocalDate value5() {
        return getUptime();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedTime();
    }

    @Override
    public IdGeneratorWorkerNodeRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public IdGeneratorWorkerNodeRecord value2(String value) {
        setAppId(value);
        return this;
    }

    @Override
    public IdGeneratorWorkerNodeRecord value3(String value) {
        setHostName(value);
        return this;
    }

    @Override
    public IdGeneratorWorkerNodeRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public IdGeneratorWorkerNodeRecord value5(LocalDate value) {
        setUptime(value);
        return this;
    }

    @Override
    public IdGeneratorWorkerNodeRecord value6(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public IdGeneratorWorkerNodeRecord values(Long value1, String value2, String value3, String value4, LocalDate value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IdGeneratorWorkerNodeRecord
     */
    public IdGeneratorWorkerNodeRecord() {
        super(IdGeneratorWorkerNode.ID_GENERATOR_WORKER_NODE);
    }

    /**
     * Create a detached, initialised IdGeneratorWorkerNodeRecord
     */
    public IdGeneratorWorkerNodeRecord(Long id, String appId, String hostName, String type, LocalDate uptime, LocalDateTime createdTime) {
        super(IdGeneratorWorkerNode.ID_GENERATOR_WORKER_NODE);

        setId(id);
        setAppId(appId);
        setHostName(hostName);
        setType(type);
        setUptime(uptime);
        setCreatedTime(createdTime);
    }
}
